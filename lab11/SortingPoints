#include <iostream>
#include <cmath>
#include <vector>
#include <algorithm>

class Point {
private:
    double x, y;

public:
    Point(double x, double y) : x(x), y(y) {}

    double distanceToCenter() {
        return sqrt(x  x + y  y);
    }

    friend std::ostream& operator<<(std::ostream& os, const Point& point) {
        os << "(" << point.x << ", " << point.y << ")";
        return os;
    }

    bool operator<(const Point& other) const {
        return distanceToCenter() < other.distanceToCenter();
    }
};

int main() {
    std::vector<Point> points = {Point(3, 4), Point(1, 2), Point(5, 5)};

    std::sort(points.begin(), points.end());

    for (const auto& point : points) {
        std::cout << point << " distance to center: " << point.distanceToCenter() << std::endl;
    }

    return 0;
}
